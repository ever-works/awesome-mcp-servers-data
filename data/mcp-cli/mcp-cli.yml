name: MCP CLI
description: A CLI tool for testing MCP servers, aiding in the development and
  debugging of MCP server integrations.
source_url: https://github.com/chrishayuk/mcp-cli
category: testing-debugging-tools
tags:
  - mcp
  - cli
  - testing
  - debugging
markdown: >-
  # MCP CLI


  A command-line tool for interacting with Model Context Provider (MCP) servers,
  useful for testing, development, and debugging of MCP server integrations.


  **Source:**
  [https://github.com/chrishayuk/mcp-cli](https://github.com/chrishayuk/mcp-cli)


  ## Features

  - Protocol-level communication with Model Context Provider servers.

  - Dynamic exploration of available tools and resources.

  - Supports multiple providers (OpenAI, Ollama).

  - Default models: `gpt-4o-mini` for OpenAI, `qwen2.5-coder` for Ollama.

  - Flexible server configuration via command-line arguments or JSON config
  file.

  - Interactive mode for dynamic command execution.

  - Supported commands include:
    - `ping`: Check server responsiveness.
    - `list-tools`: List available tools.
    - `list-resources`: List available resources.
    - `list-prompts`: List available prompts.
    - `chat`: Enter interactive chat mode.
    - `clear`: Clear the terminal.
    - `help`: Show supported commands.
    - `quit`/`exit`: Exit the client.
  - Supports running with different providers and models via command-line
  options.

  - Chat mode for interactive conversation with the server.

  - Open source under the MIT License.


  ## Prerequisites

  - Python 3.8 or higher.

  - For Ollama: Ollama installed and running.

  - For OpenAI: `OPENAI_API_KEY` set in environment variables.


  ## Installation

  - Clone the repository and install dependencies with `uv` (see repo for
  instructions).


  ## Pricing

  - MCP CLI is open source and free to use (MIT License).


  ## Tags

  mcp, cli, testing, debugging
updated_at: 2025-05-14 00:45
